/* 2. Escreva um programa em C que gere números aleatórios para uma matriz quadrada de ordem 9. O
programa deve conter um menu com as seguintes opções:
a. Gerar elementos para a matriz
b. Apresentar os elementos da matriz
c. Apresentar a média dos valores de uma linha (informada pelo usuário)
d. Apresentar a média dos valores de uma coluna (informada pelo usuário)
e. Apresentar a média dos valores da diagonal principal
f. Apresentar a média dos valores abaixo da diagonal principal
g. Apresentar a média dos valores acima da diagonal principal
Procure empregar o uso de funções na solução deste problema. */
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
void gerar_matriz(){
    int mat[9][9]; 
    for (int i=0; i<9; i++){
        for (int j=0; j<9; j++){
            mat[i][j] = rand() % 10;
            printf ("%4i", mat[i][j]);
        }
        printf ("\n");
    }
}

void apresentar_matriz (int mat[9][9]){
    for (int i=0; i<9; i++){
        for (int j=0; j<9; j++){
            printf ("%4i", mat[i][j]);
        }
        printf ("\n");
    }
    printf ("\n");
}

void media_linha(int mat[9][9]){
    float media;
    int linha, soma=0;
    printf ("informe a linha : ");
    scanf ("%i", &linha);
    for (int i=0; i<9; i++){
        soma+=mat[linha][i];
    }
    media=soma/9.0;
    printf ("a media da linha é :%.2f\n", media);
}

void media_coluna(int mat[9][9]){
    float media;
    int coluna, soma=0;
    printf ("informe a coluna : ");
    scanf ("%i", &coluna);
    for (int i=0; i<9; i++){
        soma+=mat[i][coluna];
    }
    media=soma/9.0;
    printf ("a media da coluna é :%.2f\n", media);
}

void media_diagonal_principal(int mat[9][9]){
    int soma=0;
    float media;
    for (int i=0; i<9; i++){
        soma += mat[i][i];
    }
    media = soma / 9.0;
    printf ("a media da diagonal principal é : %.2f\n", media);
}

void media_abaixo_principal(int mat[9][9]){
    int soma=0;
    float media;
    for (int i=0; i<9; i++){
        for (int j=0; j<9; j++){
            if (i > j){
                soma += mat[i][j];
            }
        }
    }
    media = soma / 36.0;
    printf ("a media dos numeros abaixo da diagonal principal é : %.2f\n", media);
}

void media_acima_principal(int mat[9][9]){
    int soma=0;
    float media;
    for (int i=0; i<9; i++){
        for (int j=0; j<9; j++){
            if (j > i){
                soma += mat[i][j];
            }
        }
    }
    media = soma / 36.0;
    printf ("a media dos numeros acima da diagonal principal é : %.2f\n", media);
}

int main() {
    char opcao;
    int mat[9][9];
    int teste=0;
    srand(time(NULL));
    while (1){
        printf("Selecione uma opção\n");
        printf("a. Gerar elementos para a matriz\n");
        printf("b. Apresentar os elementos da matriz\n");
        printf("c. Apresentar a média dos valores de uma linha (informada pelo usuário)\n");
        printf("d. Apresentar a média dos valores de uma coluna (informada pelo usuário)\n");
        printf("e. Apresentar a média dos valores da diagonal principal\n");
        printf("f. Apresentar a média dos valores abaixo da diagonal principal\n");
        printf("g. Apresentar a média dos valores acima da diagonal principal\n");
        scanf ("%c", &opcao);
        switch (opcao){
            case 'a':
                for (int i=0; i<9; i++){
                    for (int j=0; j<9; j++){
                        mat[i][j] = rand() % 10;
                    }
                    teste++;
                }        
            break;
            case 'b':
            if (teste == 0){
                printf ("Matriz não pode ser apresentada, pois ela não foi gerada ainda !");
                return 0;
            }
            apresentar_matriz(mat);
            break;
            case 'c':
            if (teste == 0){
                printf ("Matriz não pode ser apresentada, pois ela não foi gerada ainda !");
                return 0;
            }
            media_linha(mat);
            break;
            case 'd':
            if (teste == 0){
                printf ("Matriz não pode ser apresentada, pois ela não foi gerada ainda !");
                return 0;
            }
            media_coluna(mat);
            break;
            case 'e':
            if (teste == 0){
                printf ("Matriz não pode ser apresentada, pois ela não foi gerada ainda !");
                return 0;
            }
            media_diagonal_principal(mat);
            break;
            case 'f':
            if (teste == 0){
                printf ("Matriz não pode ser apresentada, pois ela não foi gerada ainda !");
                return 0;
            }
            media_abaixo_principal(mat);
            break;
            case 'g':
            if (teste == 0){
                printf ("Matriz não pode ser apresentada, pois ela não foi gerada ainda !");
                return 0;
            }
            media_acima_principal(mat);
            break;
            default:
            printf ("Letra incorreta !!");
            return 0;
        }
    
        getchar();
    }
}
